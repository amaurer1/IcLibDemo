<?xml version="1.0" encoding="utf-8" standalone="no"?>
<svg
	version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
	id="svg" viewBox="-0.025, -0.2, 1.05, 1.25" width="600px" height="705px" style="background-color:white; user-select:none; transform: scaleY(-1.0);" >
   <!--  -->
   <rect id="rect01" x="0.1000" y="0.0000" width="0.4000" height="1.0000" fill="rgb(240,240,150)" stroke="none" />
   <rect id="rect02" x="0.2000" y="0.0000" width="0.2000" height="1.0000" fill="rgb(245,245,111)" stroke="none" />
   <rect x="0.0" y="0.0" width="1.0" height="1.0" fill="none" stroke="gray" stroke-width="0.0025px" />
   <text id="stepLabel" x="0.0000" y="0.1250" font-family="Arial" font-size="0.03px" font-weight="600" text-anchor="start" dominant-baseline="central" transform="scale(1.0, -1.0)">Step 2</text>
   <text id="iterLabel" x="0.0000" y="0.0750" font-family="Arial" font-size="0.03px" font-weight="600" text-anchor="start" dominant-baseline="central" transform="scale(1.0, -1.0)">Iteration 1</text>
   <polygon id="prevBtn" points="0.475, -0.15 0.425, -0.1 0.475, -0.05" fill="gray" stroke="gray" stroke-width="0.0025px" ></polygon>
   <polygon id="nextBtn" points="0.525, -0.15 0.575, -0.1 0.525, -0.05" fill="gray" stroke="gray" stroke-width="0.0025px" ></polygon>
   <!-- Vertical lines -->
   <line x1="0.1000" y1="0.0000" x2="0.1000" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" stroke-dashoffset="0.005px" stroke-dasharray="0.005px" />
   <line x1="0.2000" y1="0.0000" x2="0.2000" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" stroke-dashoffset="0.005px" stroke-dasharray="0.005px" />
   <line x1="0.3000" y1="0.0000" x2="0.3000" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" />
   <line x1="0.4000" y1="0.0000" x2="0.4000" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" stroke-dashoffset="0.005px" stroke-dasharray="0.005px" />
   <line x1="0.5000" y1="0.0000" x2="0.5000" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" stroke-dashoffset="0.005px" stroke-dasharray="0.005px" />
   <line x1="0.6000" y1="0.0000" x2="0.6000" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" />
   <line x1="0.6667" y1="0.0000" x2="0.6667" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" stroke-dashoffset="0.005px" stroke-dasharray="0.005px" />
   <line x1="0.7333" y1="0.0000" x2="0.7333" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" stroke-dashoffset="0.005px" stroke-dasharray="0.005px" />
   <line x1="0.8000" y1="0.0000" x2="0.8000" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" />
   <line x1="0.8667" y1="0.0000" x2="0.8667" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" stroke-dashoffset="0.005px" stroke-dasharray="0.005px" />
   <line x1="0.9333" y1="0.0000" x2="0.9333" y2="1.000" fill="none" stroke="gray" stroke-width="0.0025px" stroke-dashoffset="0.005px" stroke-dasharray="0.005px" />
   <!-- Control points line -->
   <polyline id="polyline" points="0.0000, 0.0000 0.1000, 0.2667 0.2000, 0.5333 0.3000, 0.8000 0.4000, 0.8667 0.5000, 0.9333 0.6000, 1.0000 0.6667, 0.8000 0.7333, 0.6000 0.8000, 0.4000 0.8667, 0.5667 0.9333, 0.7333 1.0000, 0.9000" fill="none" stroke="gray" stroke-width="0.005px" />
   <!-- Points -->
   <rect id="point01" x="0.0000" y="0.0000" width="0.03" height="0.03" fill="lime" transform="translate(-0.015, -0.015)" />
   <rect id="point02" x="0.1000" y="0.2667" width="0.03" height="0.03" fill="blue" transform="translate(-0.015, -0.015)" />
   <rect id="point03" x="0.2000" y="0.5333" width="0.03" height="0.03" fill="blue" transform="translate(-0.015, -0.015)" />
   <rect id="point04" x="0.3000" y="0.8000" width="0.03" height="0.03" fill="red" transform="translate(-0.015, -0.015)" />
   <rect id="point05" x="0.4000" y="0.8667" width="0.03" height="0.03" fill="blue" transform="translate(-0.015, -0.015)" />
   <rect id="point06" x="0.5000" y="0.9333" width="0.03" height="0.03" fill="blue" transform="translate(-0.015, -0.015)" />
   <rect id="point07" x="0.6000" y="1.0000" width="0.03" height="0.03" fill="lime" transform="translate(-0.015, -0.015)" />
   <rect id="point08" x="0.6667" y="0.8000" width="0.03" height="0.03" fill="blue" transform="translate(-0.015, -0.015)" />
   <rect id="point09" x="0.7333" y="0.6000" width="0.03" height="0.03" fill="blue" transform="translate(-0.015, -0.015)" />
   <rect id="point10" x="0.8000" y="0.4000" width="0.03" height="0.03" fill="red" transform="translate(-0.015, -0.015)" />
   <rect id="point11" x="0.8667" y="0.5667" width="0.03" height="0.03" fill="blue" transform="translate(-0.015, -0.015)" />
   <rect id="point12" x="0.9333" y="0.7333" width="0.03" height="0.03" fill="blue" transform="translate(-0.015, -0.015)" />
   <rect id="point13" x="1.0000" y="0.9000" width="0.03" height="0.03" fill="red" transform="translate(-0.015, -0.015)" />
   <!-- Point labels -->
   <text id="pointLabelA" x="0.0000" y="-0.0000" font-family="Arial" font-size="0.03px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0200)">A</text>
   <text id="pointLabelB" x="0.1000" y="-0.2667" font-family="Arial" font-size="0.03px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0200)">B</text>
   <text id="pointLabelC" x="0.2000" y="-0.5333" font-family="Arial" font-size="0.03px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0200)">C</text>
   <text id="pointLabelD" x="0.3000" y="-0.8000" font-family="Arial" font-size="0.03px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0200)">D</text>
   <text id="pointLabelE" x="0.4000" y="-0.8667" font-family="Arial" font-size="0.03px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0200)">E</text>
   <text id="pointLabelF" x="0.5000" y="-0.9333" font-family="Arial" font-size="0.03px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0200)">F</text>
   <text id="pointLabelG" x="0.6000" y="-1.0000" font-family="Arial" font-size="0.03px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0200)">G</text>
   <!-- Line labels -->
   <text id="lineLabelA" x="0.0000" y="0.0000" font-family="Arial" font-size="0.03px" font-weight="600" font-style="italic" text-anchor="start" transform="scale(1.0, -1.0) translate(0.0000, -0.1250)">a</text>
   <text id="lineLabelB" x="0.1000" y="0.0000" font-family="Arial" font-size="0.03px" font-weight="600" font-style="italic" text-anchor="start" transform="scale(1.0, -1.0) translate(0.0000, -0.1250)">b</text>
   <text id="lineLabelC" x="0.2000" y="0.0000" font-family="Arial" font-size="0.03px" font-weight="600" font-style="italic" text-anchor="start" transform="scale(1.0, -1.0) translate(0.0000, -0.1250)">c</text>
   <text id="lineLabelD" x="0.3000" y="0.0000" font-family="Arial" font-size="0.03px" font-weight="600" font-style="italic" text-anchor="start" transform="scale(1.0, -1.0) translate(0.0000, -0.1250)">d</text>
   <text id="lineLabelE" x="0.4000" y="0.0000" font-family="Arial" font-size="0.03px" font-weight="600" font-style="italic" text-anchor="start" transform="scale(1.0, -1.0) translate(0.0000, -0.1250)">e</text>
   <text id="lineLabelF" x="0.5000" y="0.0000" font-family="Arial" font-size="0.03px" font-weight="600" font-style="italic" text-anchor="start" transform="scale(1.0, -1.0) translate(0.0000, -0.1250)">f</text>
   <text id="lineLabelG" x="0.6000" y="0.0000" font-family="Arial" font-size="0.03px" font-weight="600" font-style="italic" text-anchor="start" transform="scale(1.0, -1.0) translate(0.0000, -0.1250)">g</text>
   <script type="text/javascript">
      <![CDATA[
         var svg = document.getElementById("svg");
         var rect01 = document.getElementById("rect01");
         var rect02 = document.getElementById("rect02");
         var stepLabel = document.getElementById("stepLabel");
         var iterLabel = document.getElementById("iterLabel");
         var prevBtn = document.getElementById("prevBtn");
         var nextBtn = document.getElementById("nextBtn");
         var polyline = document.getElementById("polyline");
         var point01 = document.getElementById("point01");
         var point02 = document.getElementById("point02");
         var point03 = document.getElementById("point03");
         var point04 = document.getElementById("point04");
         var point05 = document.getElementById("point05");
         var point06 = document.getElementById("point06");
         var point07 = document.getElementById("point07");
         var point08 = document.getElementById("point08");
         var point09 = document.getElementById("point09");
         var point10 = document.getElementById("point10");
         var point11 = document.getElementById("point11");
         var point12 = document.getElementById("point12");
         var point13 = document.getElementById("point13");
         var pointLabelA = document.getElementById("pointLabelA");
         var pointLabelB = document.getElementById("pointLabelB");
         var pointLabelC = document.getElementById("pointLabelC");
         var pointLabelD = document.getElementById("pointLabelD");
         var pointLabelE = document.getElementById("pointLabelE");
         var pointLabelF = document.getElementById("pointLabelF");
         var pointLabelG = document.getElementById("pointLabelG");
         var lineLabelA = document.getElementById("lineLabelA");
         var lineLabelB = document.getElementById("lineLabelB");
         var lineLabelC = document.getElementById("lineLabelC");
         var lineLabelD = document.getElementById("lineLabelD");
         var lineLabelE = document.getElementById("lineLabelE");
         var lineLabelF = document.getElementById("lineLabelF");
         var lineLabelG = document.getElementById("lineLabelG");
         var step = 2;
         var iter = 0;
         var pv = [
            0.0000, 0.0000, 0.1000, 0.2667, 0.2000, 0.5333, 
            0.3000, 0.8000, 0.4000, 0.8667, 0.5000, 0.9333, 
            0.6000, 1.0000, 0.6667, 0.8000, 0.7333, 0.6000, 
            0.8000, 0.4000, 0.8667, 0.5667, 0.9333, 0.7333, 
            1.0000, 0.9000];
         function setRectangles(x1, x2, x3, x4)
         {
            rect01.setAttributeNS(null, "x", x1);
            rect01.setAttributeNS(null, "width", x4 - x1);
            rect02.setAttributeNS(null, "x", x2);
            rect02.setAttributeNS(null, "width", x3 - x2);
         }
         function setPoints()
         {
            point01.setAttributeNS(null, "x", pv[0]);
            point01.setAttributeNS(null, "y", pv[1]);
            point02.setAttributeNS(null, "x", pv[2]);
            point02.setAttributeNS(null, "y", pv[3]);
            point03.setAttributeNS(null, "x", pv[4]);
            point03.setAttributeNS(null, "y", pv[5]);
            point04.setAttributeNS(null, "x", pv[6]);
            point04.setAttributeNS(null, "y", pv[7]);
            point05.setAttributeNS(null, "x", pv[8]);
            point05.setAttributeNS(null, "y", pv[9]);
            point06.setAttributeNS(null, "x", pv[10]);
            point06.setAttributeNS(null, "y", pv[11]);
            point07.setAttributeNS(null, "x", pv[12]);
            point07.setAttributeNS(null, "y", pv[13]);
            point08.setAttributeNS(null, "x", pv[14]);
            point08.setAttributeNS(null, "y", pv[15]);
            point09.setAttributeNS(null, "x", pv[16]);
            point09.setAttributeNS(null, "y", pv[17]);
            point10.setAttributeNS(null, "x", pv[18]);
            point10.setAttributeNS(null, "y", pv[19]);
            point11.setAttributeNS(null, "x", pv[20]);
            point11.setAttributeNS(null, "y", pv[21]);
            point12.setAttributeNS(null, "x", pv[22]);
            point12.setAttributeNS(null, "y", pv[23]);
            point13.setAttributeNS(null, "x", pv[24]);
            point13.setAttributeNS(null, "y", pv[25]);
         }
         function setLabels()
         {
            var s = parseInt(step / 2) * 6;
            if (s == 0)
            {
               pointLabelA.setAttributeNS(null, "visibility", "hidden");
               pointLabelB.setAttributeNS(null, "visibility", "hidden");
               pointLabelC.setAttributeNS(null, "visibility", "hidden");
               pointLabelE.setAttributeNS(null, "visibility", "visible");
               pointLabelF.setAttributeNS(null, "visibility", "visible");
               pointLabelG.setAttributeNS(null, "visibility", "visible");
               pointLabelD.setAttributeNS(null, "x",  pv[s + 0]);
               pointLabelD.setAttributeNS(null, "y", -pv[s + 1]);
               pointLabelE.setAttributeNS(null, "x",  pv[s + 2]);
               pointLabelE.setAttributeNS(null, "y", -pv[s + 3]);
               pointLabelF.setAttributeNS(null, "x",  pv[s + 4]);
               pointLabelF.setAttributeNS(null, "y", -pv[s + 5]);
               pointLabelG.setAttributeNS(null, "x",  pv[s + 6]);
               pointLabelG.setAttributeNS(null, "y", -pv[s + 7]);

               lineLabelA.setAttributeNS(null, "visibility", "hidden");
               lineLabelB.setAttributeNS(null, "visibility", "hidden");
               lineLabelC.setAttributeNS(null, "visibility", "hidden");
               lineLabelE.setAttributeNS(null, "visibility", "visible");
               lineLabelF.setAttributeNS(null, "visibility", "visible");
               lineLabelG.setAttributeNS(null, "visibility", "visible");
               lineLabelD.setAttributeNS(null, "x",  pv[s + 0]);
               lineLabelE.setAttributeNS(null, "x",  pv[s + 2]);
               lineLabelF.setAttributeNS(null, "x",  pv[s + 4]);
               lineLabelG.setAttributeNS(null, "x",  pv[s + 6]);
            }
            else if (s == 24)
            {
               pointLabelA.setAttributeNS(null, "visibility", "visible");
               pointLabelB.setAttributeNS(null, "visibility", "visible");
               pointLabelC.setAttributeNS(null, "visibility", "visible");
               pointLabelE.setAttributeNS(null, "visibility", "hidden");
               pointLabelF.setAttributeNS(null, "visibility", "hidden");
               pointLabelG.setAttributeNS(null, "visibility", "hidden");
               pointLabelA.setAttributeNS(null, "x",  pv[s - 6]);
               pointLabelA.setAttributeNS(null, "y", -pv[s - 5]);
               pointLabelB.setAttributeNS(null, "x",  pv[s - 4]);
               pointLabelB.setAttributeNS(null, "y", -pv[s - 3]);
               pointLabelC.setAttributeNS(null, "x",  pv[s - 2]);
               pointLabelC.setAttributeNS(null, "y", -pv[s - 1]);
               pointLabelD.setAttributeNS(null, "x",  pv[s + 0]);
               pointLabelD.setAttributeNS(null, "y", -pv[s + 1]);

               lineLabelA.setAttributeNS(null, "visibility", "visible");
               lineLabelB.setAttributeNS(null, "visibility", "visible");
               lineLabelC.setAttributeNS(null, "visibility", "visible");
               lineLabelE.setAttributeNS(null, "visibility", "hidden");
               lineLabelF.setAttributeNS(null, "visibility", "hidden");
               lineLabelG.setAttributeNS(null, "visibility", "hidden");
               lineLabelA.setAttributeNS(null, "x",  pv[s - 6]);
               lineLabelB.setAttributeNS(null, "x",  pv[s - 4]);
               lineLabelC.setAttributeNS(null, "x",  pv[s - 2]);
               lineLabelD.setAttributeNS(null, "x",  pv[s - 0]);
            }
            else
            {
               pointLabelA.setAttributeNS(null, "visibility", "visible");
               pointLabelB.setAttributeNS(null, "visibility", "visible");
               pointLabelC.setAttributeNS(null, "visibility", "visible");
               pointLabelE.setAttributeNS(null, "visibility", "visible");
               pointLabelF.setAttributeNS(null, "visibility", "visible");
               pointLabelG.setAttributeNS(null, "visibility", "visible");
               pointLabelA.setAttributeNS(null, "x",  pv[s - 6]);
               pointLabelA.setAttributeNS(null, "y", -pv[s - 5]);
               pointLabelB.setAttributeNS(null, "x",  pv[s - 4]);
               pointLabelB.setAttributeNS(null, "y", -pv[s - 3]);
               pointLabelC.setAttributeNS(null, "x",  pv[s - 2]);
               pointLabelC.setAttributeNS(null, "y", -pv[s - 1]);
               pointLabelD.setAttributeNS(null, "x",  pv[s + 0]);
               pointLabelD.setAttributeNS(null, "y", -pv[s + 1]);
               pointLabelE.setAttributeNS(null, "x",  pv[s + 2]);
               pointLabelE.setAttributeNS(null, "y", -pv[s + 3]);
               pointLabelF.setAttributeNS(null, "x",  pv[s + 4]);
               pointLabelF.setAttributeNS(null, "y", -pv[s + 5]);
               pointLabelG.setAttributeNS(null, "x",  pv[s + 6]);
               pointLabelG.setAttributeNS(null, "y", -pv[s + 7]);

               lineLabelA.setAttributeNS(null, "visibility", "visible");
               lineLabelB.setAttributeNS(null, "visibility", "visible");
               lineLabelC.setAttributeNS(null, "visibility", "visible");
               lineLabelE.setAttributeNS(null, "visibility", "visible");
               lineLabelF.setAttributeNS(null, "visibility", "visible");
               lineLabelG.setAttributeNS(null, "visibility", "visible");
               lineLabelA.setAttributeNS(null, "x",  pv[s - 6]);
               lineLabelB.setAttributeNS(null, "x",  pv[s - 4]);
               lineLabelC.setAttributeNS(null, "x",  pv[s - 2]);
               lineLabelD.setAttributeNS(null, "x",  pv[s + 0]);
               lineLabelE.setAttributeNS(null, "x",  pv[s + 2]);
               lineLabelF.setAttributeNS(null, "x",  pv[s + 4]);
               lineLabelG.setAttributeNS(null, "x",  pv[s + 6]);
            }
         }
         function setValues(dir)
         {
            stepLabel.textContent = "Step " + (parseInt(step / 2) + 1);
            iterLabel.textContent = "Iteration " + (iter + 1);
            switch (step)
            {
               case 0:
                  switch (iter)
                  {
                     case 0:
                        if (!dir)
                        {
                           pv[3] = 0.2667; // 0
                        }
                        else if (dir)
                        {
                           pv[3] = 0.2667; // 0
                           pv[5] = 0.5333; // 0
                           pv[9] = 0.8667; // 0
                           pv[11] = 0.9333; // 0
                           pv[15] = 0.8000; // 0
                           pv[17] = 0.6000; // 0
                           pv[21] = 0.5667; // 0
                           pv[23] = 0.7333; // 0
                        }
                        break;
                     case 1:
                        if (!dir)
                        {
                           pv[3] = 0.2667; // 1
                        }
                        break;
                     case 2:
                        if (!dir)
                        {
                           pv[3] = 0.3467; // 2
                        }
                        break;
                     default: break;
                  }
                  setRectangles(pv[0], pv[0], pv[2], pv[4]);
                  break;
               case 1:
                  switch (iter)
                  {
                     case 0:
                        pv[3] = 0.2667; // 1
                        break;
                     case 1:
                        pv[3] = 0.3467; // 2
                        break;
                     case 2:
                        pv[3] = 0.3427; // 3
                        break;
                     default: break;
                  }
                  setRectangles(pv[0], pv[0], pv[2], pv[4]);
                  break;
               case 2:
                  switch (iter)
                  {
                     case 0:
                        if (!dir)
                        {
                           pv[5] = 0.5333; // 0
                           pv[9] = 0.8667; // 0
                        }
                        break;
                     case 1:
                        if (!dir)
                        {
                           pv[5] = 0.6933; // 1
                           pv[9] = 0.9067; // 1
                        }
                        break;
                     case 2:
                        if (!dir)
                        {
                           pv[5] = 0.6854; // 2
                           pv[9] = 0.9146; // 2
                        }
                        break;
                     default: break;
                  }
                  setRectangles(pv[2], pv[4], pv[8], pv[10]);
                  break;
               case 3:
                  switch (iter)
                  {
                     case 0:
                        pv[5] = 0.6933; // 1
                        pv[9] = 0.9067; // 1
                        break;
                     case 1:
                        pv[5] = 0.6854; // 2
                        pv[9] = 0.9146; // 2
                        break;
                     case 2:
                        pv[5] = 0.6830; // 3
                        pv[9] = 0.9170; // 3
                        break;
                     default: break;
                  }
                  setRectangles(pv[2], pv[4], pv[8], pv[10]);
                  break;
               case 4:
                  switch (iter)
                  {
                     case 0:
                        if (!dir)
                        {
                           pv[11] = 0.9333; // 0
                           pv[15] = 0.8000; // 0
                        }
                        break;
                     case 1:
                        if (!dir)
                        {
                           pv[11] = 0.9533; // 1
                           pv[15] = 0.8000; // 1
                        }
                        break;
                     case 2:
                        if (!dir)
                        {
                           pv[11] = 0.9573; // 2
                           pv[15] = 0.7000; // 2
                        }
                        break;
                     default: break;
                  }
                  setRectangles(pv[8], pv[10], pv[14], pv[16]);
                  break;
               case 5:
                  switch (iter)
                  {
                     case 0:
                        pv[11] = 0.9533; // 1
                        pv[15] = 0.8000; // 1
                        break;
                     case 1:
                        pv[11] = 0.9573; // 2
                        pv[15] = 0.7000; // 2
                        break;
                     case 2:
                        pv[11] = 0.9585; // 3
                        pv[15] = 0.7000; // 3
                        break;
                     default: break;
                  }
                  setRectangles(pv[8], pv[10], pv[14], pv[16]);
                  break;
               case 6:
                  switch (iter)
                  {
                     case 0:
                        if (!dir)
                        {
                           pv[17] = 0.6000; // 0
                           pv[21] = 0.5667; // 0
                        }
                        break;
                     case 1:
                        if (!dir)
                        {
                           pv[17] = 0.4000; // 1
                           pv[21] = 0.4000; // 1
                        }
                        break;
                     case 2:
                        if (!dir)
                        {
                           pv[17] = 0.4000; // 2
                           pv[21] = 0.4000; // 2
                        }
                        break;
                     default: break;
                  }
                  setRectangles(pv[14], pv[16], pv[20], pv[22]);
                  break;
               case 7:
                  switch (iter)
                  {
                     case 0:
                        pv[17] = 0.4000; // 1
                        pv[21] = 0.4000; // 1
                        break;
                     case 1:
                        pv[17] = 0.4000; // 2
                        pv[21] = 0.4000; // 2
                        break;
                     case 2:
                        pv[17] = 0.4000; // 3
                        pv[21] = 0.4000; // 3
                        break;
                     default: break;
                  }
                  setRectangles(pv[14], pv[16], pv[20], pv[22]);
                  break;
               case 8:
                  switch (iter)
                  {
                     case 0:
                        if (!dir)
                        {
                           pv[23] = 0.7333; // 0
                        }
                        break;
                     case 1:
                        if (!dir)
                        {
                           pv[23] = 0.9000; // 1
                        }
                        break;
                     case 2:
                        if (!dir)
                        {
                           pv[23] = 0.9000; // 2
                        }
                        break;
                     default: break;
                  }
                  setRectangles(pv[20], pv[22], pv[24], pv[24]);
                  break;
               case 9:
                  switch (iter)
                  {
                     case 0:
                        pv[23] = 0.9000; // 1
                        break;
                     case 1:
                        pv[23] = 0.9000; // 2
                        break;
                     case 2:
                        if (dir)
                        {
                           pv[23] = 0.9000; // 3
                        }
                        else if (!dir)
                        {
                           pv[3] = 0.3427; // 3
                           pv[5] = 0.6830; // 3
                           pv[9] = 0.9170; // 3
                           pv[11] = 0.9585; // 3
                           pv[15] = 0.7000; // 3
                           pv[17] = 0.4000; // 3
                           pv[21] = 0.4000; // 3
                           pv[23] = 0.9000; // 3
                        }
                        break;
                     default: break;
                  }
                  setRectangles(pv[20], pv[22], pv[24], pv[24]);
                  break;
               default: break;
            }
            polyline.setAttributeNS(null, "points", pv);
            setPoints();
            setLabels();
         }
         function prevStep()
         {
            if (--step < 0)
            {
               --iter;
               if (iter < 0) iter = 2;
               step = 9;
            }
            setValues(false);
         }
         function nextStep()
         {
            if (++step > 9)
            {
               ++iter;
               if (iter > 2) iter = 0;
               step = 0;
            }
            setValues(true);
         }
         svg.addEventListener('load', setValues());
         prevBtn.addEventListener('click', prevStep);
         nextBtn.addEventListener('click', nextStep);
         svg.addEventListener('wheel', (e) =>
         {
            if (e.shiftKey) e.deltaY < 0 ? prevStep() : nextStep();
         });
      ]]>
   </script>
</svg>
