<?xml version="1.0" encoding="utf-8" standalone="no"?>
<svg
   version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
   id="svg" viewBox="-0.15, -0.15, 2.2, 1.25" width="600" height="330" style="background-color:white; user-select:none; transform: scaleY(-1.0);" >
   <!-- color gradient -->
   <defs>
      <linearGradient id="grad" x1="0%" y1="0%" x2="100%" y2="0%">
         <stop offset="0%" stop-color="black;" />
         <stop id="stop1" offset="30%" stop-color="black" />
         <stop id="stop2" offset="30%" stop-color="darkgray" />
         <stop offset="100%" stop-color="darkgray" />
      </linearGradient>
   </defs>
   <!-- border -->
   <rect x="0.0" y="0.0" width="2.0" height="1.0" fill="none" stroke="gray" stroke-width="0.005px" />
   <!-- x axis -->
   <line x1="0.0000" y1="0.0000" x2="0.0000" y2="-0.0500" fill="none" stroke-width="0.005px" stroke="gray" />
   <text x="0.0000" y="0.1000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" dominant-baseline="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0000)">0.0</text>
   <line x1="0.5000" y1="0.0000" x2="0.5000" y2="-0.0300" fill="none" stroke-width="0.005px" stroke="gray" />
   <line x1="1.0000" y1="0.0000" x2="1.0000" y2="-0.0500" fill="none" stroke-width="0.005px" stroke="gray" />
   <text x="1.0000" y="0.1000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" dominant-baseline="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0000)">0.5</text>
   <line x1="1.5000" y1="0.0000" x2="1.5000" y2="-0.0300" fill="none" stroke-width="0.005px" stroke="gray" />
   <line x1="2.0000" y1="0.0000" x2="2.0000" y2="-0.0500" fill="none" stroke-width="0.005px" stroke="gray" />
   <text x="2.0000" y="0.1000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" dominant-baseline="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0000)">1.0</text>
   <!-- y axis -->
   <line x1="0.0000" y1="0.0000" x2="-0.0500" y2="0.0000" fill="none" stroke-width="0.005px" stroke="gray" />
   <text x="-0.1000" y="-0.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" dominant-baseline="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0000)">0.0</text>
   <line x1="0.0000" y1="0.5000" x2="-0.0400" y2="0.5000" fill="none" stroke-width="0.005px" stroke="gray" />
   <line x1="0.0000" y1="1.0000" x2="-0.0500" y2="1.0000" fill="none" stroke-width="0.005px" stroke="gray" />
   <text x="-0.1000" y="-1.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" dominant-baseline="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0000)">0.5</text>
   <text id="text" x="0.02" y="-0.98" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="start" dominant-baseline="hanging" transform="scale(1.0, -1.0)">x=0.3000</text>
   <line id="line" x1="0.6000" y1="0.0000" x2="0.6000" y2="1.0000" fill="none" stroke="gray" stroke-width="0.005px" stroke-dashoffset="0.025px" stroke-dasharray="0.01px" />
   <path id="path" d="M0.0000, 0.0000 C0.6666, 1.0000 1.3333, 1.0000 2.0000, 0.0000" stroke="url(#grad)" fill="none" stroke-width="0.01px" />
   <!-- control point lines -->
   <polyline id="polylineA" points="0.0000, 0.0000 0.6666, 1.0000 1.3333, 1.0000 2.0000, 0.0000" fill="none" stroke-width="0.005px" stroke="black" />
   <polyline id="polylineB" points="0.2000, 0.3000 0.8667, 1.0000 1.5333, 0.7000" fill="none" stroke-width="0.005px" stroke="red" />
   <polyline id="polylineC" points="0.4000, 0.5100, 1.0666, 0.9100" fill="none" stroke-width="0.005px" stroke="lime" />
   <!-- points -->
   <rect id="pointA1" x="0.0000" y="0.0000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="black"/>
   <rect id="pointA2" x="0.6666" y="1.0000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="black"/>
   <rect id="pointA3" x="1.3333" y="1.0000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="black"/>
   <rect id="pointA4" x="2.0000" y="0.0000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="black"/>
   <rect id="pointB1" x="0.2000" y="0.3000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="red"/>
   <rect id="pointB2" x="0.8667" y="1.0000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="red"/>
   <rect id="pointB3" x="1.5333" y="0.7000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="red"/>
   <rect id="pointC1" x="0.4000" y="0.5100" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="lime"/>
   <rect id="pointC2" x="1.0666" y="0.9100" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="lime"/>
   <rect id="pointD1" x="0.6000" y="0.6300" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="blue"/>
   <!-- Point labels -->
   <text id="pLabel1" x="0.0000" y="-0.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0350)">A</text>
   <text id="pLabel2" x="0.6666" y="-1.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0350)">B</text>
   <text id="pLabel3" x="1.3333" y="-1.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0350)">C</text>
   <text id="pLabel4" x="2.0000" y="-0.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0350)">D</text>
   <script type="text/javascript">
      <![CDATA[
         var svg = document.getElementById("svg");
         var text = document.getElementById("text");
         var line = document.getElementById("line");
         var path = document.getElementById("path");
         var stop1 = document.getElementById("stop1");
         var stop2 = document.getElementById("stop2");
         var polylineA = document.getElementById("polylineA");
         var polylineB = document.getElementById("polylineB");
         var polylineC = document.getElementById("polylineC");
         var pointA1 = document.getElementById("pointA1");
         var pointA2 = document.getElementById("pointA2");
         var pointA3 = document.getElementById("pointA3");
         var pointA4 = document.getElementById("pointA4");
         var pointB1 = document.getElementById("pointB1");
         var pointB2 = document.getElementById("pointB2");
         var pointB3 = document.getElementById("pointB3");
         var pointC1 = document.getElementById("pointC1");
         var pointC2 = document.getElementById("pointC2");
         var pointD1 = document.getElementById("pointD1");
         function refreshValues(x)
         {
            // Position line
            text.textContent = "x = " + x.toFixed(4);
            line.setAttributeNS(null, 'x1', x * 2.0);
            line.setAttributeNS(null, 'x2', x * 2.0);
            // 1st polyline
            var pav = [0.0000, 0.0000, 0.6666, 1.0000, 1.3333, 1.0000, 2.0000, 0.0000];
            polylineA.setAttributeNS(null, 'points', pav);
            pointA1.setAttributeNS(null, "x", pav[0]);
            pointA1.setAttributeNS(null, "y", pav[1]);
            pointA2.setAttributeNS(null, "x", pav[2]);
            pointA2.setAttributeNS(null, "y", pav[3]);
            pointA3.setAttributeNS(null, "x", pav[4]);
            pointA3.setAttributeNS(null, "y", pav[5]);
            pointA4.setAttributeNS(null, "x", pav[6]);
            pointA4.setAttributeNS(null, "y", pav[7]);
            // Curve color gradient
            stop1.setAttributeNS(null, "offset", x);
            stop2.setAttributeNS(null, "offset", x);
            // Second polyline
            var pbv = [(pav[2] - pav[0]) * x + pav[0], 
                       (pav[3] - pav[1]) * x + pav[1], 
                       (pav[4] - pav[2]) * x + pav[2], 
                       (pav[5] - pav[3]) * x + pav[3], 
                       (pav[6] - pav[4]) * x + pav[4], 
                       (pav[7] - pav[5]) * x + pav[5]];
            // 2nd polyline
            polylineB.setAttributeNS(null, 'points', pbv);
            pointB1.setAttributeNS(null, "x", pbv[0]);
            pointB1.setAttributeNS(null, "y", pbv[1]);
            pointB2.setAttributeNS(null, "x", pbv[2]);
            pointB2.setAttributeNS(null, "y", pbv[3]);
            pointB3.setAttributeNS(null, "x", pbv[4]);
            pointB3.setAttributeNS(null, "y", pbv[5]);
            // 3rd polyline
            var pcv = [(pbv[2] - pbv[0]) * x + pbv[0], 
                       (pbv[3] - pbv[1]) * x + pbv[1], 
                       (pbv[4] - pbv[2]) * x + pbv[2], 
                       (pbv[5] - pbv[3]) * x + pbv[3]];
            polylineC.setAttributeNS(null, 'points', pcv);
            pointC1.setAttributeNS(null, "x", pcv[0]);
            pointC1.setAttributeNS(null, "y", pcv[1]);
            pointC2.setAttributeNS(null, "x", pcv[2]);
            pointC2.setAttributeNS(null, "y", pcv[3]);
            // Final point
            var pdv = [(pcv[2] - pcv[0]) * x + pcv[0], 
                       (pcv[3] - pcv[1]) * x + pcv[1]];
            pointD1.setAttributeNS(null, "x", pdv[0]);
            pointD1.setAttributeNS(null, "y", pdv[1]);
         }
         function limit(v)
         {
            if (v < 0.0) return 0.0;
            if (v > 1.0) return 1.0;
            return v;
         }
         var px = 0.3;
         var md = false;
         var p = svg.createSVGPoint();
         var ms = 0.0;
         svg.addEventListener('load', refreshValues(px), false);
         svg.addEventListener("pointerdown", (e) =>
         {
            if (e.button == 0)
            {
               md = true;
               p.x = e.clientX, p.y = e.clientY;
               ms = p.matrixTransform(svg.getScreenCTM().inverse()).x;
               svg.setPointerCapture(e.pointerId);
            }
         });
         svg.addEventListener("mousemove", (e) =>
         {
            if (md)
            {
               p.x = e.clientX, p.y = e.clientY;
               refreshValues(limit(px + (p.matrixTransform(svg.getScreenCTM().inverse()).x - ms) / 2.0));
            }
         });
         svg.addEventListener("pointerup", (e) =>
         {
            if (md)
            {
               md = false;
               p.x = e.clientX, p.y = e.clientY;
               px = limit(px + (p.matrixTransform(svg.getScreenCTM().inverse()).x - ms) / 2.0);
               svg.releasePointerCapture(e.pointerId);
            }
         });
      ]]>
   </script>
</svg>
