<?xml version="1.0" encoding="utf-8" standalone="no"?>
<svg
   version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
   id="svg" viewBox="-0.15, -0.15, 2.2, 1.25" width="600" height="330" style="background-color:white; user-select:none; transform: scaleY(-1.0);" >
   <!-- border -->
   <rect x="0.0" y="0.0" width="2.0" height="1.0" fill="none" stroke="gray" stroke-width="0.005px" />
   <!-- x axis -->
   <line x1="0.0000" y1="0.0000" x2="0.0000" y2="-0.0500" fill="none" stroke-width="0.005px" stroke="gray" />
   <text x="0.0000" y="0.1000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" dominant-baseline="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0000)">0.0</text>
   <line x1="0.5000" y1="0.0000" x2="0.5000" y2="-0.0300" fill="none" stroke-width="0.005px" stroke="gray" />
   <line x1="1.0000" y1="0.0000" x2="1.0000" y2="-0.0500" fill="none" stroke-width="0.005px" stroke="gray" />
   <text x="1.0000" y="0.1000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" dominant-baseline="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0000)">0.5</text>
   <line x1="1.5000" y1="0.0000" x2="1.5000" y2="-0.0300" fill="none" stroke-width="0.005px" stroke="gray" />
   <line x1="2.0000" y1="0.0000" x2="2.0000" y2="-0.0500" fill="none" stroke-width="0.005px" stroke="gray" />
   <text x="2.0000" y="0.1000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" dominant-baseline="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0000)">1.0</text>
   <!-- y axis -->
   <line x1="0.0000" y1="0.0000" x2="-0.0500" y2="0.0000" fill="none" stroke-width="0.005px" stroke="gray" />
   <text x="-0.1000" y="-0.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" dominant-baseline="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0000)">0.0</text>
   <line x1="0.0000" y1="0.5000" x2="-0.0400" y2="0.5000" fill="none" stroke-width="0.005px" stroke="gray" />
   <line x1="0.0000" y1="1.0000" x2="-0.0500" y2="1.0000" fill="none" stroke-width="0.005px" stroke="gray" />
   <text x="-0.1000" y="-1.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" dominant-baseline="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0000)">0.5</text>
   <!-- vertical lines -->
   <line id="line1" x1="0.6666" y1="0.0000" x2="0.6666" y2="1.0000" fill="none" stroke-width="0.005px" stroke="gray" />
   <line id="line2" x1="1.3333" y1="0.0000" x2="1.3333" y2="1.0000" fill="none" stroke-width="0.005px" stroke="gray" />
   <!-- control point lines -->
   <polyline id="polyline" points="0.0000, 0.0000 0.6666, 1.0000 1.3333, 1.0000 2.0000, 0.0000" fill="none" stroke-width="0.005px" stroke="black" />
   <!-- curve -->
   <path id="path" d="M0.0000, 0.0000 C0.6666, 1.0000 1.3333, 1.0000 2.0000, 0.0000" stroke="black" fill="none" stroke-width="0.01px" />
   <!-- point labels -->
   <text id="pLabel1" x="0.0000" y="-0.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0350)">A</text>
   <text id="pLabel2" x="0.6666" y="-1.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0350)">B</text>
   <text id="pLabel3" x="1.3333" y="-1.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0350)">C</text>
   <text id="pLabel4" x="2.0000" y="-0.0000" font-family="Arial" font-size="0.06px" font-weight="600" text-anchor="middle" transform="scale(1.0, -1.0) translate(0.0000, -0.0350)">D</text>
   <!-- points -->
   <rect id="point1" x="0.0000" y="0.0000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="black"/>
   <rect id="point2" x="0.6666" y="1.0000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="black"/>
   <rect id="point3" x="1.3333" y="1.0000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="black"/>
   <rect id="point4" x="2.0000" y="0.0000" width="0.05" height="0.05" transform="translate(-0.025, -0.025)" fill ="black"/>
   <script type="text/javascript">
      <![CDATA[
         var svg = document.getElementById("svg");
         var polyline = document.getElementById("polyline");
         var path = document.getElementById("path");
         var point1 = document.getElementById("point1");
         var point2 = document.getElementById("point2");
         var point3 = document.getElementById("point3");
         var point4 = document.getElementById("point4");
         var pLabel1 = document.getElementById("pLabel1");
         var pLabel2 = document.getElementById("pLabel2");
         var pLabel3 = document.getElementById("pLabel3");
         var pLabel4 = document.getElementById("pLabel4");
         var pv = [0.0000, 0.0000, 0.6666, 1.0000, 1.3333, 1.0000, 2.0000, 0.0000];
         function refreshValues()
         {
            pv[0] = 0.0;
            pv[2] = 0.666;
            pv[4] = 1.333;
            pv[6] = 2.0;
            polyline.setAttributeNS(null, 'points', pv);
            path.setAttributeNS(null, 'd', 'M' + pv[0] + ', ' + pv[1] + ' C' + pv[2] + ', ' + pv[3] + ' ' + pv[4] + ', ' + pv[5] + ' ' + pv[6] + ', ' + pv[7]);
            point1.setAttributeNS(null, "x", pv[0]);
            point1.setAttributeNS(null, "y", pv[1]);
            point2.setAttributeNS(null, "x", pv[2]);
            point2.setAttributeNS(null, "y", pv[3]);
            point3.setAttributeNS(null, "x", pv[4]);
            point3.setAttributeNS(null, "y", pv[5]);
            point4.setAttributeNS(null, "x", pv[6]);
            point4.setAttributeNS(null, "y", pv[7]);
            
            pLabel1.setAttributeNS(null, "x", pv[0]);
            pLabel1.setAttributeNS(null, "y", -pv[1]);
            pLabel2.setAttributeNS(null, "x", pv[2]);
            pLabel2.setAttributeNS(null, "y", -pv[3]);
            pLabel3.setAttributeNS(null, "x", pv[4]);
            pLabel3.setAttributeNS(null, "y", -pv[5]);
            pLabel4.setAttributeNS(null, "x", pv[6]);
            pLabel4.setAttributeNS(null, "y", -pv[7]);
         }
         function limit(v, l1, l2)
         {
            if (v < l1) return l1;
            if (v > l2) return l2;
            return v;
         }
         svg.addEventListener('load', refreshValues(), false);

         var tp = svg.createSVGPoint();
         var md = -1;
         var ox = 0.0;
         var oy = 0.0;
         point1.addEventListener('pointerdown', (e) =>
         {
            if (e.button == 0)
            {
               tp.x = e.clientX, tp.y = e.clientY;
               tp = tp.matrixTransform(svg.getScreenCTM().inverse());
               md = 0;
               ox = pv[0] - tp.x;
               oy = pv[1] - tp.y;
               svg.setPointerCapture(e.pointerId);
            }
         }, false);

         point2.addEventListener('pointerdown', (e) =>
         {
            if (e.button == 0)
            {
               tp.x = e.clientX, tp.y = e.clientY;
               tp = tp.matrixTransform(svg.getScreenCTM().inverse());
               md = 2;
               ox = pv[2] - tp.x;
               oy = pv[3] - tp.y;
               svg.setPointerCapture(e.pointerId);
            }
         }, false);

         point3.addEventListener('pointerdown', (e) =>
         {
            if (e.button == 0)
            {
               tp.x = e.clientX, tp.y = e.clientY;
               tp = tp.matrixTransform(svg.getScreenCTM().inverse());
               md = 4;
               ox = pv[4] - tp.x;
               oy = pv[5] - tp.y;
               svg.setPointerCapture(e.pointerId);
            }
         }, false);

         point4.addEventListener('pointerdown', (e) =>
         {
            if (e.button == 0)
            {
               tp.x = e.clientX, tp.y = e.clientY;
               tp = tp.matrixTransform(svg.getScreenCTM().inverse());
               md = 6;
               ox = pv[6] - tp.x;
               oy = pv[7] - tp.y;
               svg.setPointerCapture(e.pointerId);
            }
         }, false);

         svg.addEventListener('mousemove', (e) =>
         {
            if (md > -1)
           {
               tp.x = e.clientX, tp.y = e.clientY;
               tp = tp.matrixTransform(svg.getScreenCTM().inverse());
               pv[md + 0] = limit(tp.x + ox, 0.0, 2.0);
               pv[md + 1] = limit(tp.y + oy, 0.0, 1.0);
               if (md == 0 && pv[0] > pv[6]) pv[0] = pv[6];
               if (md == 6 && pv[6] < pv[0]) pv[6] = pv[0];
               refreshValues();
            }
         }, false);

         svg.addEventListener('pointerup', (e) =>
         {
            md = -1;
            ox = 0.0;
            oy = 0.0;
         }, false);
      ]]>
   </script>
</svg>
